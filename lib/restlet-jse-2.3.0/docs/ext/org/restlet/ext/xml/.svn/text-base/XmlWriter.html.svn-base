<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_51) on Wed Dec 17 17:25:16 UTC 2014 -->
<title>XmlWriter (Restlet Extensions 2.3.0 - Java Standard Edition)</title>
<meta name="date" content="2014-12-17">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="XmlWriter (Restlet Extensions 2.3.0 - Java Standard Edition)";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/XmlWriter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em>
				<span>Restlet Framework 2.3.0</span><br/><span>Java Standard Edition</span>
			</em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../org/restlet/ext/xml/XmlRepresentation.html" title="class in org.restlet.ext.xml"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?org/restlet/ext/xml/XmlWriter.html" target="_top">Frames</a></li>
<li><a href="XmlWriter.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">org.restlet.ext.xml</div>
<h2 title="Class XmlWriter" class="title">Class XmlWriter</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">org.xml.sax.helpers.XMLFilterImpl</a></li>
<li>
<ul class="inheritance">
<li>org.restlet.ext.xml.XmlWriter</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/DTDHandler.html?is-external=true" title="class or interface in org.xml.sax">DTDHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/EntityResolver.html?is-external=true" title="class or interface in org.xml.sax">EntityResolver</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ErrorHandler.html?is-external=true" title="class or interface in org.xml.sax">ErrorHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLFilter.html?is-external=true" title="class or interface in org.xml.sax">XMLFilter</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax">XMLReader</a></dd>
</dl>
<hr>
<br>
<pre>public final class <span class="strong">XmlWriter</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></pre>
<div class="block">XML writer doing the opposite work of a SAX-based XML reader. The
 implementation is based on the work of David Megginson, the creator of SAX
 who placed the original code in the public domain.
 
 <p>
 This class can be used by itself or as part of a SAX event stream: it takes
 as input a series of SAX2 ContentHandler events and uses the information in
 those events to write an XML document. Since this class is a filter, it can
 also pass the events on down a filter chain for further processing (you can
 use the XmlWriter to take a snapshot of the current state at any point in a
 filter chain), and it can be used directly as a ContentHandler for a SAX2
 XMLReader.
 </p>
 
 <p>
 The client creates a document by invoking the methods for standard SAX2
 events, always beginning with the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startDocument()"><code>startDocument</code></a> method
 and ending with the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endDocument()"><code>endDocument</code></a> method. There are
 convenience methods provided so that clients to not have to create empty
 attribute lists or provide empty strings as parameters; for example, the
 method invocation
 </p>
 
 <pre>
 w.startElement(&quot;foo&quot;);
 </pre>
 
 <p>
 is equivalent to the regular SAX2 ContentHandler method
 </p>
 
 <pre>
 w.startElement(&quot;&quot;, &quot;foo&quot;, &quot;&quot;, new AttributesImpl());
 </pre>
 
 <p>
 Except that it is more efficient because it does not allocate a new empty
 attribute list each time. The following code will send a simple XML document
 to standard output:
 </p>
 
 <pre>
 XmlWriter w = new XmlWriter();
 
 w.startDocument();
 w.startElement(&quot;greeting&quot;);
 w.characters(&quot;Hello, world!&quot;);
 w.endElement(&quot;greeting&quot;);
 w.endDocument();
 </pre>
 
 <p>
 The resulting document will look like this:
 </p>
 
 <pre>
           &lt;?xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;greeting&gt;Hello, world!&lt;/greeting&gt;
 </pre>
 
 <p>
 In fact, there is an even simpler convenience method, <var>dataElement</var>,
 designed for writing elements that contain only character data, so the code
 to generate the document could be shortened to
 </p>
 
 <pre>
 XmlWriter w = new XmlWriter();
 
 w.startDocument();
 w.dataElement(&quot;greeting&quot;, &quot;Hello, world!&quot;);
 w.endDocument();
 </pre>
 
 <h2>Whitespace</h2>
 
 <p>
 According to the XML Recommendation, <em>all</em> whitespace in an XML
 document is potentially significant to an application, so this class never
 adds newlines or indentation. If you insert three elements in a row, as in
 </p>
 
 <pre>
 w.dataElement(&quot;item&quot;, &quot;1&quot;);
 w.dataElement(&quot;item&quot;, &quot;2&quot;);
 w.dataElement(&quot;item&quot;, &quot;3&quot;);
 </pre>
 
 <p>
 you will end up with
 </p>
 
 <pre>
           &lt;item&gt;1&lt;/item&gt;&lt;item&gt;3&lt;/item&gt;&lt;item&gt;3&lt;/item&gt;
 </pre>
 
 <p>
 You need to invoke one of the <var>characters</var> methods explicitly to add
 newlines or indentation. Alternatively, you can use the data format mode (set
 the "dataFormat" property) which is optimized for writing purely
 data-oriented (or field-oriented) XML, and does automatic linebreaks and
 indentation (but does not support mixed content properly). See details below.
 </p>
 
 <h2>Namespace Support</h2>
 
 <p>
 The writer contains extensive support for XML Namespaces, so that a client
 application does not have to keep track of prefixes and supply
 <var>xmlns</var> attributes. By default, the XML writer will generate
 Namespace declarations in the form _NS1, _NS2, etc., wherever they are
 needed, as in the following example:
 </p>
 
 <pre>
 w.startDocument();
 w.emptyElement(&quot;http://www.foo.com/ns/&quot;, &quot;foo&quot;);
 w.endDocument();
 </pre>
 
 <p>
 The resulting document will look like this:
 </p>
 
 <pre>
           &lt;?xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;_NS1:foo xmlns:_NS1=&quot;http://www.foo.com/ns/&quot;/&gt;
 </pre>
 
 <p>
 In many cases, document authors will prefer to choose their own prefixes
 rather than using the (ugly) default names. The XML writer allows two methods
 for selecting prefixes:
 </p>
 
 <ol>
 <li>the qualified name</li>
 <li>the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)"><code>setPrefix</code></a> method.</li>
 </ol>
 
 <p>
 Whenever the XML writer finds a new Namespace URI, it checks to see if a
 qualified (prefixed) name is also available; if so it attempts to use the
 name's prefix (as long as the prefix is not already in use for another
 Namespace URI).
 </p>
 
 <p>
 Before writing a document, the client can also pre-map a prefix to a
 Namespace URI with the setPrefix method:
 </p>
 
 <pre>
 w.setPrefix(&quot;http://www.foo.com/ns/&quot;, &quot;foo&quot;);
 w.startDocument();
 w.emptyElement(&quot;http://www.foo.com/ns/&quot;, &quot;foo&quot;);
 w.endDocument();
 </pre>
 
 <p>
 The resulting document will look like this:
 </p>
 
 <pre>
           &lt;?xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;foo:foo xmlns:foo=&quot;http://www.foo.com/ns/&quot;/&gt;
 </pre>
 
 <p>
 The default Namespace simply uses an empty string as the prefix:
 </p>
 
 <pre>
 w.setPrefix(&quot;http://www.foo.com/ns/&quot;, &quot;&quot;);
 w.startDocument();
 w.emptyElement(&quot;http://www.foo.com/ns/&quot;, &quot;foo&quot;);
 w.endDocument();
 </pre>
 
 <p>
 The resulting document will look like this:
 </p>
 
 <pre>
           &lt;?xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;foo xmlns=&quot;http://www.foo.com/ns/&quot;/&gt;
 </pre>
 
 <p>
 By default, the XML writer will not declare a Namespace until it is actually
 used. Sometimes, this approach will create a large number of Namespace
 declarations, as in the following example:
 </p>
 
 <pre>
           &lt;xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
            &lt;rdf:Description about=&quot;http://www.foo.com/ids/books/12345&quot;&gt;
             &lt;dc:title xmlns:dc=&quot;http://www.purl.org/dc/&quot;&gt;A Dark Night&lt;/dc:title&gt;
             &lt;dc:creator xmlns:dc=&quot;http://www.purl.org/dc/&quot;&gt;Jane Smith&lt;/dc:title&gt;
             &lt;dc:date xmlns:dc=&quot;http://www.purl.org/dc/&quot;&gt;2000-09-09&lt;/dc:title&gt;
            &lt;/rdf:Description&gt;
           &lt;/rdf:RDF&gt;
 </pre>
 
 <p>
 The "rdf" prefix is declared only once, because the RDF Namespace is used by
 the root element and can be inherited by all of its descendants; the "dc"
 prefix, on the other hand, is declared three times, because no higher element
 uses the Namespace. To solve this problem, you can instruct the XML writer to
 predeclare Namespaces on the root element even if they are not used there:
 </p>
 
 <pre>
 w.forceNSDecl(&quot;http://www.purl.org/dc/&quot;);
 </pre>
 
 <p>
 Now, the "dc" prefix will be declared on the root element even though it's
 not needed there, and can be inherited by its descendants:
 </p>
 
 <pre>
           &lt;xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;
                       xmlns:dc=&quot;http://www.purl.org/dc/&quot;&gt;
            &lt;rdf:Description about=&quot;http://www.foo.com/ids/books/12345&quot;&gt;
             &lt;dc:title&gt;A Dark Night&lt;/dc:title&gt;
             &lt;dc:creator&gt;Jane Smith&lt;/dc:title&gt;
             &lt;dc:date&gt;2000-09-09&lt;/dc:title&gt;
            &lt;/rdf:Description&gt;
           &lt;/rdf:RDF&gt;
 </pre>
 
 <p>
 This approach is also useful for declaring Namespace prefixes that be used by
 qualified names appearing in attribute values or character data.
 </p>
 
 <h2>Data Format</h2>
 
 <p>
 This mode, enabled by the "dataFormat" property, pretty-prints field-oriented
 XML without mixed content. All added indentation and newlines will be passed
 on down the filter chain (if any).
 </p>
 
 <p>
 In general, all whitespace in an XML document is potentially significant, so
 a general-purpose XML writing tool cannot add newlines or indentation.
 </p>
 
 <p>
 There is, however, a large class of XML documents where information is
 strictly fielded: each element contains either character data or other
 elements, but not both. For this special case, it is possible for a writing
 tool to provide automatic indentation and newlines without requiring extra
 work from the user. Note that this class will likely not yield appropriate
 results for document-oriented XML like XHTML pages, which mix character data
 and elements together.
 </p>
 
 <p>
 This writer mode will automatically place each start tag on a new line,
 optionally indented if an indent step is provided (by default, there is no
 indentation). If an element contains other elements, the end tag will also
 appear on a new line with leading indentation. Consider, for example, the
 following code:
 </p>
 
 <pre>
 XmlWriter w = new XmlWriter();
 w.setDataFormat(true);
 w.setIndentStep(2);
 w.startDocument();
 w.startElement(&quot;Person&quot;);
 w.dataElement(&quot;name&quot;, &quot;Jane Smith&quot;);
 w.dataElement(&quot;date-of-birth&quot;, &quot;1965-05-23&quot;);
 w.dataElement(&quot;citizenship&quot;, &quot;US&quot;);
 w.endElement(&quot;Person&quot;);
 w.endDocument();
 </pre>
 
 <p>
 This code will produce the following document:
 </p>
 
 <pre>
           &lt;?xml version=&quot;1.0&quot; standalone='yes'?&gt;
          
           &lt;Person&gt;
             &lt;name&gt;Jane Smith&lt;/name&gt;
             &lt;date-of-birth&gt;1965-05-23&lt;/date-of-birth&gt;
             &lt;citizenship&gt;US&lt;/citizenship&gt;
           &lt;/Person&gt;
 </pre></div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>David Megginson, Jerome Louvel (contact@restlet.com)</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLFilter.html?is-external=true" title="class or interface in org.xml.sax"><code>XMLFilter</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax"><code>ContentHandler</code></a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter()">XmlWriter</a></strong>()</code>
<div class="block">Create a new XML writer.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(java.io.OutputStream)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out)</code>
<div class="block">Constructor.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(java.io.OutputStream, java.nio.charset.Charset)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html?is-external=true" title="class or interface in java.nio.charset">Charset</a>&nbsp;cs)</code>
<div class="block">Constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/CharsetEncoder.html?is-external=true" title="class or interface in java.nio.charset">CharsetEncoder</a>&nbsp;enc)</code>
<div class="block">Constructor.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(java.io.OutputStream, java.lang.String)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;charsetName)</code>
<div class="block">Constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(java.io.Writer)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</code>
<div class="block">Create a new XML writer.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(org.xml.sax.XMLReader)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax">XMLReader</a>&nbsp;xmlreader)</code>
<div class="block">Create a new XML writer.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#XmlWriter(org.xml.sax.XMLReader, java.io.Writer)">XmlWriter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax">XMLReader</a>&nbsp;xmlreader,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</code>
<div class="block">Create a new XML writer.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(char[], int, int)">characters</a></strong>(char[]&nbsp;ch,
          int&nbsp;start,
          int&nbsp;len)</code>
<div class="block">Write character data.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)">characters</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;data)</code>
<div class="block">Write a string of character data, with XML escaping.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#dataElement(java.lang.String, java.lang.String)">dataElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)</code>
<div class="block">Write an element with character data content but no attributes or
 Namespace URI.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#dataElement(java.lang.String, java.lang.String, java.lang.String)">dataElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)</code>
<div class="block">Write an element with character data content but no attributes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#dataElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes, java.lang.String)">dataElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
           <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)</code>
<div class="block">Write an element with character data content.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String)">emptyElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">Add an empty element without a Namespace URI, qname or attributes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String)">emptyElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">Add an empty element without a qname or attributes.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)">emptyElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
            <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts)</code>
<div class="block">Write an empty element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endDocument()">endDocument</a></strong>()</code>
<div class="block">Write a newline at the end of the document.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String)">endElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">End an element without a Namespace URI or qname.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String)">endElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
          <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">End an element without a qname.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)">endElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
          <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
          <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName)</code>
<div class="block">Write an end tag.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#flush()">flush</a></strong>()</code>
<div class="block">Flush the output.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String)">forceNSDecl</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri)</code>
<div class="block">Force a Namespace to be declared on the root element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String, java.lang.String)">forceNSDecl</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
           <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prefix)</code>
<div class="block">Force a Namespace declaration with a preferred prefix.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#getIndentStep()">getIndentStep</a></strong>()</code>
<div class="block">Return the current indent step.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a></code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#getPrefix(java.lang.String)">getPrefix</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri)</code>
<div class="block">Get the current or preferred prefix for a Namespace URI.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a></code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#getWriter()">getWriter</a></strong>()</code>
<div class="block">Returns the underlying writer.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#ignorableWhitespace(char[], int, int)">ignorableWhitespace</a></strong>(char[]&nbsp;ch,
                   int&nbsp;start,
                   int&nbsp;length)</code>
<div class="block">Write ignorable whitespace.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#isDataFormat()">isDataFormat</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#processingInstruction(java.lang.String, java.lang.String)">processingInstruction</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;target,
                     <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;data)</code>
<div class="block">Write a processing instruction.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#reset()">reset</a></strong>()</code>
<div class="block">Reset the writer.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setDataFormat(boolean)">setDataFormat</a></strong>(boolean&nbsp;dataFormat)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setIndentStep(int)">setIndentStep</a></strong>(int&nbsp;indentStep)</code>
<div class="block">Set the current indent step.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setOutput(java.io.Writer)">setOutput</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</code>
<div class="block">Set a new output destination for the document.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)">setPrefix</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prefix)</code>
<div class="block">Specify a preferred prefix for a Namespace URI.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startDocument()">startDocument</a></strong>()</code>
<div class="block">Write the XML declaration at the beginning of the document.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String)">startElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">Start a new element without a qname, attributes or a Namespace URI.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String)">startElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)</code>
<div class="block">Start a new element without a qname or attributes.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)">startElement</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
            <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
            <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts)</code>
<div class="block">Write a start tag.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_org.xml.sax.helpers.XMLFilterImpl">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.xml.sax.helpers.<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#endPrefixMapping(java.lang.String)" title="class or interface in org.xml.sax.helpers">endPrefixMapping</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#error(org.xml.sax.SAXParseException)" title="class or interface in org.xml.sax.helpers">error</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#fatalError(org.xml.sax.SAXParseException)" title="class or interface in org.xml.sax.helpers">fatalError</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getContentHandler()" title="class or interface in org.xml.sax.helpers">getContentHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getDTDHandler()" title="class or interface in org.xml.sax.helpers">getDTDHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getEntityResolver()" title="class or interface in org.xml.sax.helpers">getEntityResolver</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getErrorHandler()" title="class or interface in org.xml.sax.helpers">getErrorHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getFeature(java.lang.String)" title="class or interface in org.xml.sax.helpers">getFeature</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getParent()" title="class or interface in org.xml.sax.helpers">getParent</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#getProperty(java.lang.String)" title="class or interface in org.xml.sax.helpers">getProperty</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#notationDecl(java.lang.String, java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">notationDecl</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#parse(org.xml.sax.InputSource)" title="class or interface in org.xml.sax.helpers">parse</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#parse(java.lang.String)" title="class or interface in org.xml.sax.helpers">parse</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#resolveEntity(java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">resolveEntity</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setContentHandler(org.xml.sax.ContentHandler)" title="class or interface in org.xml.sax.helpers">setContentHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setDocumentLocator(org.xml.sax.Locator)" title="class or interface in org.xml.sax.helpers">setDocumentLocator</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setDTDHandler(org.xml.sax.DTDHandler)" title="class or interface in org.xml.sax.helpers">setDTDHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setEntityResolver(org.xml.sax.EntityResolver)" title="class or interface in org.xml.sax.helpers">setEntityResolver</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setErrorHandler(org.xml.sax.ErrorHandler)" title="class or interface in org.xml.sax.helpers">setErrorHandler</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setFeature(java.lang.String, boolean)" title="class or interface in org.xml.sax.helpers">setFeature</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setParent(org.xml.sax.XMLReader)" title="class or interface in org.xml.sax.helpers">setParent</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#setProperty(java.lang.String, java.lang.Object)" title="class or interface in org.xml.sax.helpers">setProperty</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#skippedEntity(java.lang.String)" title="class or interface in org.xml.sax.helpers">skippedEntity</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#startPrefixMapping(java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">startPrefixMapping</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">unparsedEntityDecl</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#warning(org.xml.sax.SAXParseException)" title="class or interface in org.xml.sax.helpers">warning</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="XmlWriter()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter()</pre>
<div class="block">Create a new XML writer.
 <p>
 Write to standard output.
 </p></div>
</li>
</ul>
<a name="XmlWriter(java.io.OutputStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out)</pre>
<div class="block">Constructor.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>out</code> - The underlying output stream.</dd></dl>
</li>
</ul>
<a name="XmlWriter(java.io.OutputStream, java.nio.charset.Charset)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html?is-external=true" title="class or interface in java.nio.charset">Charset</a>&nbsp;cs)</pre>
<div class="block">Constructor.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>out</code> - The underlying output stream.</dd></dl>
</li>
</ul>
<a name="XmlWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/CharsetEncoder.html?is-external=true" title="class or interface in java.nio.charset">CharsetEncoder</a>&nbsp;enc)</pre>
<div class="block">Constructor.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>out</code> - The underlying output stream.</dd></dl>
</li>
</ul>
<a name="XmlWriter(java.io.OutputStream, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</a>&nbsp;out,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;charsetName)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html?is-external=true" title="class or interface in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructor.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>out</code> - The underlying output stream.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html?is-external=true" title="class or interface in java.io">UnsupportedEncodingException</a></code></dd></dl>
</li>
</ul>
<a name="XmlWriter(java.io.Writer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</pre>
<div class="block">Create a new XML writer.
 <p>
 Write to the writer provided.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>writer</code> - The output destination, or null to use standard output.</dd></dl>
</li>
</ul>
<a name="XmlWriter(org.xml.sax.XMLReader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax">XMLReader</a>&nbsp;xmlreader)</pre>
<div class="block">Create a new XML writer.
 <p>
 Use the specified XML reader as the parent.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>xmlreader</code> - The parent in the filter chain, or null for no parent.</dd></dl>
</li>
</ul>
<a name="XmlWriter(org.xml.sax.XMLReader, java.io.Writer)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>XmlWriter</h4>
<pre>public&nbsp;XmlWriter(<a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax">XMLReader</a>&nbsp;xmlreader,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</pre>
<div class="block">Create a new XML writer.
 <p>
 Use the specified XML reader as the parent, and write to the specified
 writer.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>xmlreader</code> - The parent in the filter chain, or null for no parent.</dd><dd><code>writer</code> - The output destination, or null to use standard output.</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="characters(char[], int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>characters</h4>
<pre>public&nbsp;void&nbsp;characters(char[]&nbsp;ch,
              int&nbsp;start,
              int&nbsp;len)
                throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write character data. Pass the event on down the filter chain for further
 processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#characters(char[], int, int)" title="class or interface in org.xml.sax">characters</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#characters(char[], int, int)" title="class or interface in org.xml.sax.helpers">characters</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>ch</code> - The array of characters to write.</dd><dd><code>start</code> - The starting position in the array.</dd><dd><code>len</code> - The number of characters to write.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the characters, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#characters(char[], int, int)" title="class or interface in org.xml.sax"><code>ContentHandler.characters(char[], int, int)</code></a></dd></dl>
</li>
</ul>
<a name="characters(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>characters</h4>
<pre>public&nbsp;void&nbsp;characters(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;data)
                throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write a string of character data, with XML escaping.
 <p>
 This is a convenience method that takes an XML String, converts it to a
 character array, then invokes <a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(char[], int, int)"><code>characters(char[], int, int)</code></a>.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>data</code> - The character data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the string, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(char[], int, int)"><code>characters(char[], int, int)</code></a></dd></dl>
</li>
</ul>
<a name="dataElement(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dataElement</h4>
<pre>public&nbsp;void&nbsp;dataElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)
                 throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write an element with character data content but no attributes or
 Namespace URI.
 
 <p>
 This is a convenience method to write a complete element with character
 data content, including the start tag and end tag. The method provides an
 empty string for the Namespace URI, and empty string for the qualified
 name, and an empty attribute list.
 </p>
 
 <p>
 This method invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a>.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>localName</code> - The element's local name.</dd><dd><code>content</code> - The character data content.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="dataElement(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dataElement</h4>
<pre>public&nbsp;void&nbsp;dataElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)
                 throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write an element with character data content but no attributes.
 
 <p>
 This is a convenience method to write a complete element with character
 data content, including the start tag and end tag. This method provides
 an empty string for the qname and an empty attribute list.
 </p>
 
 <p>
 This method invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a>.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI.</dd><dd><code>localName</code> - The element's local name.</dd><dd><code>content</code> - The character data content.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="dataElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dataElement</h4>
<pre>public&nbsp;void&nbsp;dataElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
               <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;content)
                 throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write an element with character data content.
 
 <p>
 This is a convenience method to write a complete element with character
 data content, including the start tag and end tag.
 </p>
 
 <p>
 This method invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, followed by
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a>.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI.</dd><dd><code>localName</code> - The element's local name.</dd><dd><code>qName</code> - The element's default qualified name.</dd><dd><code>atts</code> - The element's attributes.</dd><dd><code>content</code> - The character data content.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#characters(java.lang.String)"><code>characters(String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="emptyElement(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>emptyElement</h4>
<pre>public&nbsp;void&nbsp;emptyElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Add an empty element without a Namespace URI, qname or attributes.
 
 <p>
 This method will supply an empty string for the qname, and empty string
 for the Namespace URI, and an empty attribute list. It invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>emptyElement(String, String, String, Attributes)</code></a> directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>emptyElement(String, String, String, Attributes)</code></a></dd></dl>
</li>
</ul>
<a name="emptyElement(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>emptyElement</h4>
<pre>public&nbsp;void&nbsp;emptyElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Add an empty element without a qname or attributes.
 
 <p>
 This method will supply an empty string for the qname and an empty
 attribute list. It invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>emptyElement(String, String, String, Attributes)</code></a> directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI.</dd><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>emptyElement(String, String, String, Attributes)</code></a></dd></dl>
</li>
</ul>
<a name="emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>emptyElement</h4>
<pre>public&nbsp;void&nbsp;emptyElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
                <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write an empty element. This method writes an empty element tag rather
 than a start tag followed by an end tag. Both a <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String)"><code>startElement</code></a> and an <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String)"><code>endElement</code></a> event will be passed
 on down the filter chain.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI, or the empty string if the
            element has no Namespace or if Namespace processing is not
            being performed.</dd><dd><code>localName</code> - The element's local name (without prefix). This parameter must
            be provided.</dd><dd><code>qName</code> - The element's qualified name (with prefix), or the empty
            string if none is available. This parameter is strictly
            advisory: the writer may or may not use the prefix attached.</dd><dd><code>atts</code> - The element's attribute list.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the empty tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String)"><code>startElement(java.lang.String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String)"><code>endElement(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="endDocument()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endDocument</h4>
<pre>public&nbsp;void&nbsp;endDocument()
                 throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write a newline at the end of the document. Pass the event on down the
 filter chain for further processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#endDocument()" title="class or interface in org.xml.sax">endDocument</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#endDocument()" title="class or interface in org.xml.sax.helpers">endDocument</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the newline, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#endDocument()" title="class or interface in org.xml.sax"><code>ContentHandler.endDocument()</code></a></dd></dl>
</li>
</ul>
<a name="endElement(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endElement</h4>
<pre>public&nbsp;void&nbsp;endElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">End an element without a Namespace URI or qname.
 
 <p>
 This method will supply an empty string for the qName and an empty string
 for the Namespace URI. It invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a> directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the end tag, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="endElement(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endElement</h4>
<pre>public&nbsp;void&nbsp;endElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
              <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">End an element without a qname.
 
 <p>
 This method will supply an empty string for the qName. It invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a> directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI.</dd><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the end tag, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#endElement(java.lang.String, java.lang.String, java.lang.String)"><code>endElement(String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="endElement(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endElement</h4>
<pre>public&nbsp;void&nbsp;endElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
              <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
              <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName)
                throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write an end tag. Pass the event on down the filter chain for further
 processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#endElement(java.lang.String, java.lang.String, java.lang.String)" title="class or interface in org.xml.sax">endElement</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#endElement(java.lang.String, java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">endElement</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI, or the empty string if none is available.</dd><dd><code>localName</code> - The element's local (unprefixed) name (required).</dd><dd><code>qName</code> - The element's qualified (prefixed) name, or the empty string
            is none is available. This method will use the qName as a
            template for generating a prefix if necessary, but it is not
            guaranteed to use the same qName.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the end tag, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#endElement(java.lang.String, java.lang.String, java.lang.String)" title="class or interface in org.xml.sax"><code>ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="flush()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flush</h4>
<pre>public&nbsp;void&nbsp;flush()
           throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</a></pre>
<div class="block">Flush the output.
 <p>
 This method flushes the output stream. It is especially useful when you
 need to make certain that the entire document has been written to output
 but do not want to close the output stream.
 </p>
 <p>
 This method is invoked automatically by the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#endDocument()"><code>endDocument</code></a> method after writing a document.
 </p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#reset()"><code>reset()</code></a></dd></dl>
</li>
</ul>
<a name="forceNSDecl(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>forceNSDecl</h4>
<pre>public&nbsp;void&nbsp;forceNSDecl(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri)</pre>
<div class="block">Force a Namespace to be declared on the root element.
 <p>
 By default, the XMLWriter will declare only the Namespaces needed for an
 element; as a result, a Namespace may be declared many places in a
 document if it is not used on the root element.
 </p>
 <p>
 This method forces a Namespace to be declared on the root element even if
 it is not used there, and reduces the number of xmlns attributes in the
 document.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI to declare.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String, java.lang.String)"><code>forceNSDecl(java.lang.String,java.lang.String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)"><code>setPrefix(java.lang.String, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="forceNSDecl(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>forceNSDecl</h4>
<pre>public&nbsp;void&nbsp;forceNSDecl(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prefix)</pre>
<div class="block">Force a Namespace declaration with a preferred prefix.
 <p>
 This is a convenience method that invokes <a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)"><code>setPrefix</code></a>
 then <a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String)"><code>forceNSDecl</code></a>.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI to declare on the root element.</dd><dd><code>prefix</code> - The preferred prefix for the Namespace, or "" for the default
            Namespace.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)"><code>setPrefix(java.lang.String, java.lang.String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String)"><code>forceNSDecl(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getIndentStep()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIndentStep</h4>
<pre>public&nbsp;int&nbsp;getIndentStep()</pre>
<div class="block">Return the current indent step.
 <p>
 Return the current indent step: each start tag will be indented by this
 number of spaces times the number of ancestors that the element has.
 </p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The number of spaces in each indentation step, or 0 or less for
         no indentation.</dd></dl>
</li>
</ul>
<a name="getPrefix(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPrefix</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;getPrefix(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri)</pre>
<div class="block">Get the current or preferred prefix for a Namespace URI.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The preferred prefix, or "" for the default Namespace.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#setPrefix(java.lang.String, java.lang.String)"><code>setPrefix(java.lang.String, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getWriter()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWriter</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;getWriter()</pre>
<div class="block">Returns the underlying writer.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The underlying writer.</dd></dl>
</li>
</ul>
<a name="ignorableWhitespace(char[], int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ignorableWhitespace</h4>
<pre>public&nbsp;void&nbsp;ignorableWhitespace(char[]&nbsp;ch,
                       int&nbsp;start,
                       int&nbsp;length)
                         throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write ignorable whitespace. Pass the event on down the filter chain for
 further processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#ignorableWhitespace(char[], int, int)" title="class or interface in org.xml.sax">ignorableWhitespace</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#ignorableWhitespace(char[], int, int)" title="class or interface in org.xml.sax.helpers">ignorableWhitespace</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>ch</code> - The array of characters to write.</dd><dd><code>start</code> - The starting position in the array.</dd><dd><code>length</code> - The number of characters to write.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the whitespace, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#ignorableWhitespace(char[], int, int)" title="class or interface in org.xml.sax"><code>ContentHandler.ignorableWhitespace(char[], int, int)</code></a></dd></dl>
</li>
</ul>
<a name="isDataFormat()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isDataFormat</h4>
<pre>public&nbsp;boolean&nbsp;isDataFormat()</pre>
</li>
</ul>
<a name="processingInstruction(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>processingInstruction</h4>
<pre>public&nbsp;void&nbsp;processingInstruction(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;target,
                         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;data)
                           throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write a processing instruction. Pass the event on down the filter chain
 for further processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#processingInstruction(java.lang.String, java.lang.String)" title="class or interface in org.xml.sax">processingInstruction</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#processingInstruction(java.lang.String, java.lang.String)" title="class or interface in org.xml.sax.helpers">processingInstruction</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>target</code> - The PI target.</dd><dd><code>data</code> - The PI data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the PI, or if a restlet
                further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#processingInstruction(java.lang.String, java.lang.String)" title="class or interface in org.xml.sax"><code>ContentHandler.processingInstruction(java.lang.String, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="reset()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre>public&nbsp;void&nbsp;reset()</pre>
<div class="block">Reset the writer.
 
 <p>
 This method is especially useful if the writer throws an exception before
 it is finished, and you want to reuse the writer for a new document. It
 is usually a good idea to invoke <a href="../../../../org/restlet/ext/xml/XmlWriter.html#flush()"><code>flush</code></a> before resetting
 the writer, to make sure that no output is lost.
 </p>
 
 <p>
 This method is invoked automatically by the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startDocument()"><code>startDocument</code></a> method before writing a new document.
 </p>
 
 <p>
 <strong>Note:</strong> this method will <em>not</em> clear the prefix or
 URI information in the writer or the selected output writer.
 </p></div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#flush()"><code>flush()</code></a></dd></dl>
</li>
</ul>
<a name="setDataFormat(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDataFormat</h4>
<pre>public&nbsp;void&nbsp;setDataFormat(boolean&nbsp;dataFormat)</pre>
</li>
</ul>
<a name="setIndentStep(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setIndentStep</h4>
<pre>public&nbsp;void&nbsp;setIndentStep(int&nbsp;indentStep)</pre>
<div class="block">Set the current indent step.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indentStep</code> - The new indent step (0 or less for no indentation).</dd></dl>
</li>
</ul>
<a name="setOutput(java.io.Writer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOutput</h4>
<pre>public&nbsp;void&nbsp;setOutput(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</a>&nbsp;writer)</pre>
<div class="block">Set a new output destination for the document.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>writer</code> - The output destination, or null to use standard output.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#flush()"><code>flush()</code></a></dd></dl>
</li>
</ul>
<a name="setPrefix(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPrefix</h4>
<pre>public&nbsp;void&nbsp;setPrefix(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
             <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prefix)</pre>
<div class="block">Specify a preferred prefix for a Namespace URI.
 <p>
 Note that this method does not actually force the Namespace to be
 declared; to do that, use the <a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String)"><code>forceNSDecl</code></a> method as well.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI.</dd><dd><code>prefix</code> - The preferred prefix, or "" to select the default Namespace.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#getPrefix(java.lang.String)"><code>getPrefix(java.lang.String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String)"><code>forceNSDecl(java.lang.String)</code></a>, 
<a href="../../../../org/restlet/ext/xml/XmlWriter.html#forceNSDecl(java.lang.String, java.lang.String)"><code>forceNSDecl(java.lang.String,java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="startDocument()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startDocument</h4>
<pre>public&nbsp;void&nbsp;startDocument()
                   throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write the XML declaration at the beginning of the document. Pass the
 event on down the filter chain for further processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#startDocument()" title="class or interface in org.xml.sax">startDocument</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#startDocument()" title="class or interface in org.xml.sax.helpers">startDocument</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the XML declaration, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#startDocument()" title="class or interface in org.xml.sax"><code>ContentHandler.startDocument()</code></a></dd></dl>
</li>
</ul>
<a name="startElement(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startElement</h4>
<pre>public&nbsp;void&nbsp;startElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Start a new element without a qname, attributes or a Namespace URI.
 
 <p>
 This method will provide an empty string for the Namespace URI, and empty
 string for the qualified name, and a default empty attribute list. It
 invokes #startElement(String, String, String, Attributes)} directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the start tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a></dd></dl>
</li>
</ul>
<a name="startElement(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startElement</h4>
<pre>public&nbsp;void&nbsp;startElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Start a new element without a qname or attributes.
 
 <p>
 This method will provide a default empty attribute list and an empty
 string for the qualified name. It invokes
 <a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a> directly.
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The element's Namespace URI.</dd><dd><code>localName</code> - The element's local name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the start tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../org/restlet/ext/xml/XmlWriter.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"><code>startElement(String, String, String, Attributes)</code></a></dd></dl>
</li>
</ul>
<a name="startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>startElement</h4>
<pre>public&nbsp;void&nbsp;startElement(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;uri,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;localName,
                <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;qName,
                <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/Attributes.html?is-external=true" title="class or interface in org.xml.sax">Attributes</a>&nbsp;atts)
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></pre>
<div class="block">Write a start tag. Pass the event on down the filter chain for further
 processing.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)" title="class or interface in org.xml.sax">startElement</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax">ContentHandler</a></code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)" title="class or interface in org.xml.sax.helpers">startElement</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/helpers/XMLFilterImpl.html?is-external=true" title="class or interface in org.xml.sax.helpers">XMLFilterImpl</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>uri</code> - The Namespace URI, or the empty string if none is available.</dd><dd><code>localName</code> - The element's local (unprefixed) name (required).</dd><dd><code>qName</code> - The element's qualified (prefixed) name, or the empty string
            is none is available. This method will use the qName as a
            template for generating a prefix if necessary, but it is not
            guaranteed to use the same qName.</dd><dd><code>atts</code> - The element's attribute list (must not be null).</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/SAXException.html?is-external=true" title="class or interface in org.xml.sax">SAXException</a></code> - If there is an error writing the start tag, or if a
                restlet further down the filter chain raises an exception.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/org/xml/sax/ContentHandler.html?is-external=true#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)" title="class or interface in org.xml.sax"><code>ContentHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/XmlWriter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em>
				<span>Restlet Framework 2.3.0</span><br/><span>Java Standard Edition</span>
			</em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../org/restlet/ext/xml/XmlRepresentation.html" title="class in org.restlet.ext.xml"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?org/restlet/ext/xml/XmlWriter.html" target="_top">Frames</a></li>
<li><a href="XmlWriter.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>
				<i>Copyright &#169; 2005-2014 <a target="_top" href="http://restlet.com">Restlet</a>.</i>
			</small></p>
</body>
</html>
